services:
  ##### NEST API ######
  nest-api:
    container_name: nest-api
    tty: true
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    networks:
      - bwu-network
    ports:
      - ${API_PORT:-3000}:${API_PORT:-3000}

  ##### REACT FRONTEND #####
  react-frontend:
    container_name: react-frontend
    tty: true
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    networks:
      - bwu-network
    ports:
      - ${FRONTEND_PORT:-8080}:8080

  ##### MATCHMAKING SERVICE FRONTEND #####
  matchmaking-frontend:
    container_name: imbc-frontend
    tty: true
    build:
      context: .
      target: prod
      dockerfile: ./imb-campus/frontend/Dockerfile
      args:
        VITE_BASE_API_URL: ${VITE_BASE_API_URL}
    networks:
      - bwu-network
    ports:
      - ${MATCHMAKING_FRONTEND_PORT:-7000}:7000

  ##### MATCHMAKING SERVICE BACKEND #####
  imbc-backend:
    container_name: imbc-backend
    tty: true
    restart: on-failure
    build:
      context: .
      target: prod
      dockerfile: ./imb-campus/backend/Dockerfile
    environment:
      - ENVIRONMENT=${MATCHMAKING_ENVIRONMENT:-local}
      - FRONTEND_REF=${MATCHMAKING_FRONTEND_REF:-localhost}
      - FRONTEND_PORT=${MATCHMAKING_FRONTEND_PORT:-7000}
      - PGHOST=matchmaking-database
      - PGUSER=${MATCHMAKING_DATABASE_USER:-postgres}
      - PGPASSWORD=${MATCHMAKING_DATABASE_PASSWORD:-postgres}
      - PGDATABASE=matchmaking
      - PGPORT=5432
      - PORT=${MATCHMAKING_BACKEND_PORT:-5005}
      - SSO_SESSION_SECRET=${MATCHMAKING_SSO_SESSION_SECRET}
      - SSO_AUTH_SERVER_URL=${MATCHMAKING_SSO_AUTH_SERVER_URL}
      - SSO_REALM=${MATCHMAKING_SSO_REALM}
      - SSO_CLIENT_ID=${MATCHMAKING_SSO_CLIENT_ID}
      - SSO_CLIENT_SECRET=${MATCHMAKING_SSO_CLIENT_SECRET}
    networks:
      - bwu-network
    ports:
      - ${MATCHMAKING_BACKEND_PORT:-5005}:5005
    depends_on:
      matchmaking-database:
        condition: service_healthy

  ##### MATCHMAKING SERVICE DATABASE #####
  matchmaking-database:
    container_name: imbc-database
    tty: true
    image: postgres:14.5-alpine
    restart: always
    # You will need to change this if you change MATCHMAKING_DATABASE_USER.
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_USER=${MATCHMAKING_DATABASE_USER:-postgres}
      - POSTGRES_PASSWORD=${MATCHMAKING_DATABASE_PASSWORD:-postgres}
      - POSTGRES_DB=imbc
    networks:
      - bwu-network
    ports:
      - ${MATCHMAKING_DATABASE_PORT:-5009}:5432
    volumes:
      - matchmaking-database-data:/var/lib/postgresql/data
      - ./imb-campus/database/init:/docker-entrypoint-initdb.d

volumes:
  matchmaking-database-data:
    driver: local

networks:
  bwu-network:
    driver: "bridge"
