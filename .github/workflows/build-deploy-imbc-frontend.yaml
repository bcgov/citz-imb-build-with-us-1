name: IMB Campus - Frontend

on:
  push:
    branches: [ main ]
    paths:
      - "imb-campus/frontend/**"
  workflow_dispatch:
  
jobs:
  MM-Frontend-Build-Tag-Push:
    environment: MM-Frontend-Dev
    runs-on: ubuntu-latest
    steps:
    
      # Checkout BCGov/citz-imb-build-with-us-1 Github Repository
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Login to Openshift Silver Cluster
        uses: redhat-actions/oc-login@v1
        env:
          OPENSHIFT_USER: github-actions
          OPENSHIFT_NAMESPACE: ec1236-tools
        with: 
          openshift_server_url: ${{ secrets.OPENSHIFT4_SERVER_URL }}
          openshift_token: ${{ secrets.OPENSHIFT4_TOOLS_SA_PASSWORD }}
          namespace: ec1236-tools
            
      # Login to BC Gov Docker Image Repository
      - name: Login to Openshift Docker
        run : |
          docker login ${{ secrets.OPENSHIFT4_PUBLIC_IMAGE_REPOSITORY_BASE_URL }} -u ${{ secrets.OPENSHIFT4_TOOLS_SA_USERNAME }} -p ${{ secrets.OPENSHIFT4_TOOLS_SA_PASSWORD }}
      
      # Build the MM Frontend Application Image via docker-compose
      - name: Build the Docker image
        run: |
          docker-compose build imbc-frontend
      
      # TROUBLESHOOTING - view images present in github action run
      - name: Docker List Images
        run: |
          docker image ls 
      
      # Tag Docker Image built with latest
      - name: Docker Tag Version
        run: |
          docker tag citz-imb-build-with-us-1_imbc-frontend image-registry.apps.silver.devops.gov.bc.ca/ec1236-tools/imbc-frontend:latest
      # Push docker image to BC Gov Repository  
      - name: Docker Push Version
        run: |
          docker push image-registry.apps.silver.devops.gov.bc.ca/ec1236-tools/imbc-frontend:latest
          
  DEV-deploy:
    runs-on: ubuntu-latest
    environment: MM-Frontend-Dev
    needs: [ MM-Frontend-Build-Tag-Push ]
    steps:
    
      # Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Login to Openshift Silver Cluster
        uses: redhat-actions/oc-login@v1
        env:
          OPENSHIFT_USER: github-actions
          OPENSHIFT_NAMESPACE: ec1236-dev
        with: 
          openshift_server_url: ${{ secrets.OPENSHIFT4_SERVER_URL }}
          openshift_token: ${{ secrets.OPENSHIFT4_DEV_SA_PASSWORD }}
          namespace: ec1236-dev

      # Use deploy helper script to process and apply MM Frontend Application template into DEV namespace
      - name: Process and Apply Frontend DeploymentConfig, Service, Route templates
        env:
          NAMESPACE: "${{ secrets.OPENSHIFT_DEV_NAMESPACE }}"
          APPLICATION_NAME: "${{ secrets.APPLICATION_NAME }}"
          LICENSE_PLATE: "${{ secrets.LICENSE_PLATE }}"
          ENVIRONMENT: "${{ secrets.ENVIRONMENT }}"
          DC_TEMPLATE: "imbc-frontend-dc-template.yaml"
          SERVICE_TEMPLATE: "imbc-frontend-service-template.yaml"
          ROUTE_TEMPLATE: "imbc-frontend-route-template.yaml"
          DIR: "imb-campus/frontend"
          IMAGESTREAM: "imbc-frontend"
        run: |
          ./.github/helpers/deploy.sh 
          
  DEV-health-check:
    runs-on: ubuntu-latest
    environment:
      name: MM-API-Dev
    needs: [ DEV-deploy ]
    steps:
    
      # Checkout Repository
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Login to Openshift Silver Cluster
        uses: redhat-actions/oc-login@v1
        env:
          OPENSHIFT_USER: github-actions
          OPENSHIFT_NAMESPACE: ec1236-dev
        with: 
          openshift_server_url: ${{ secrets.OPENSHIFT4_SERVER_URL }}
          openshift_token: ${{ secrets.OPENSHIFT4_DEV_SA_PASSWORD }}
          namespace: ec1236-dev
            
      # Use application health helper script to monitor readiness/liveness probe response post deployment  
      - name: Health Check DEV deployment
        env:
          NAMESPACE: "${{ secrets.OPENSHIFT_DEV_NAMESPACE }}"
          APPLICATION_NAME: "${{ secrets.APPLICATION_NAME }}"
        run: |
          ./.github/helpers/application-health.sh
          
  DEV-cleanup:
    runs-on: ubuntu-latest
    environment: MM-API-Dev
    needs: [ DEV-health-check ]
    steps:

      # Checkout Repository
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Login to Openshift Silver Cluster
        uses: redhat-actions/oc-login@v1
        env:
          OPENSHIFT_USER: github-actions
          OPENSHIFT_NAMESPACE: ec1236-dev
        with: 
          openshift_server_url: ${{ secrets.OPENSHIFT4_SERVER_URL }}
          openshift_token: ${{ secrets.OPENSHIFT4_DEV_SA_PASSWORD }}
          namespace: ec1236-dev

      # Use cleanup helper script to remove any leftover deployment pod objects from previous deployment
      - name: Cleanup previous deployment pod objects
        env:
          NAMESPACE: "${{ secrets.OPENSHIFT_DEV_NAMESPACE }}"
        run: |
          ./.github/helpers/cleanup-pods.sh
          
      # Use cleanup helper script to remove any leftover deployment pod objects from previous deployment
      - name: Cleanup previous replication controller objects
        env:
          NAMESPACE: "${{ secrets.OPENSHIFT_DEV_NAMESPACE }}"
        run: |
          ./.github/helpers/cleanup-rc.sh
